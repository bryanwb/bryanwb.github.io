{"version":3,"sources":["webpack:///./src/pages/projects/bitcoinvsgold/utils/formatters.js","webpack:///./src/pages/projects/bitcoinvsgold/components/Tooltip.js","webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/core-js/modules/_flags.js","webpack:///./node_modules/core-js/modules/_object-gopn.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/es6.date.to-string.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/core-js/modules/_inherit-if-required.js","webpack:///./node_modules/core-js/modules/_set-proto.js","webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js"],"names":["commarize","num","unit","Math","floor","toFixed","length","Number","formatNum","symbol","numFormatted","toString","replace","measure","Tooltip","render","_this$props","this","props","datum","symbols","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","date","toDateString","map","s","key","name","style","color","Object","_utils_formatters__WEBPACK_IMPORTED_MODULE_4__","close","cap","formatDatum","Component","__webpack_exports__","pIE","__webpack_require__","createDesc","toIObject","toPrimitive","has","IE8_DOM_DEFINE","gOPD","getOwnPropertyDescriptor","exports","f","O","P","e","call","anObject","module","that","result","global","ignoreCase","multiline","unicode","sticky","$keys","hiddenKeys","concat","getOwnPropertyNames","$export","defined","fails","spaces","space","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","fn","trim","F","string","TYPE","String","dP","FProto","Function","prototype","nameRE","configurable","get","match","$flags","DESCRIPTORS","$toString","define","source","flags","R","undefined","DateProto","Date","getTime","NaN","value","cof","inheritIfRequired","gOPN","$trim","$Number","Base","proto","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","first","charCodeAt","code","digits","slice","i","l","parseInt","arguments","valueOf","keys","split","j","constructor","isObject","setPrototypeOf","set","target","C","S","check","TypeError","test","buggy","Array","__proto__"],"mappings":"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","file":"component---src-pages-projects-bitcoinvsgold-components-tooltip-js-d6baa5326af7dc18493d.js","sourcesContent":["\nexport const commarize = (num) => {\n  // Alter numbers larger than 1k\n  if (num >= 1e3) {\n    var units = [\"k\", \"M\", \"Billion\", \"Trillion\"];\n    \n    // Divide to get SI Unit engineering style numbers (1e3,1e6,1e9, etc)\n    let unit = Math.floor(((num).toFixed(0).length - 1) / 3) * 3;\n    // Calculate the remainder\n    const formattedNum = ( num / (Number('1e'+unit))).toFixed(1);\n    var unitname = units[Math.floor(unit / 3) - 1]\n    \n    // output number remainder + unitname\n    return formattedNum + ' ' + unitname;\n  }\n  \n  // return formatted original number\n  return num.toFixed(2);\n};\n\nexport const formatNum = (symbol, num) => {\n  let numFormatted = num.toFixed(2).toString().replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\n  if (symbol.measure) {\n    numFormatted += symbol.measure;\n  }\n  // this magic incantation adds commas in the thousands place\n  return numFormatted\n};\n","import React from 'react';\nimport { commarize, formatNum } from '../utils/formatters';\n\n/* function commarize(num) {\n *   // Alter numbers larger than 1k\n *   if (num >= 1e3) {\n *     var units = [\"k\", \"M\", \"Billion\", \"Trillion\"];\n *     \n *     // Divide to get SI Unit engineering style numbers (1e3,1e6,1e9, etc)\n *     let unit = Math.floor(((num).toFixed(0).length - 1) / 3) * 3;\n *     // Calculate the remainder\n *     const formattedNum = ( num / (Number('1e'+unit))).toFixed(1);\n *     var unitname = units[Math.floor(unit / 3) - 1]\n *     \n *     // output number remainder + unitname\n *     return formattedNum + ' ' + unitname;\n *   }\n *   \n *   // return formatted original number\n *   return num.toFixed(2);\n * }\n * const formatNum = (symbol, num) => {\n *   let numFormatted = num.toFixed(2).toString().replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\n *   if (symbol.measure) {\n *     numFormatted += symbol.measure;\n *   }\n *   // this magic incantation adds commas in the thousands place\n *   return numFormatted\n * }; */\n\nconst formatDatum = (symbol, datum) => {\n  return (\n    <div key={symbol.name}>\n        <div>\n            <span style={{color: symbol.color}}>‚óè</span> {symbol.name}\n        </div>\n        <div>\n            &emsp;Price (USD): {formatNum(symbol, datum[symbol.name].close)}\n        </div>\n        {datum[symbol.name].cap &&\n        <div>\n            &emsp;Market Cap (USD): {commarize(datum[symbol.name].cap)}\n        </div>\n        }\n    </div>\n  );\n};\n\nclass Tooltip extends React.Component {\n\n  render() {\n    const {\n      datum,\n      symbols,\n    } = this.props;\n    \n    return (\n      datum &&\n      <div>\n          <div>{datum.date.toDateString()}</div>\n          {symbols.map((s) => formatDatum(s, datum))}\n      </div>\n    );\n\n  }\n\n}\n\nexport default Tooltip;\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n"],"sourceRoot":""}