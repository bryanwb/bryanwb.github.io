{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/layouts/index.tsx"],"names":["pageQuery","IndexPage","render","this","props","data","site","siteMetadata","siteName","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_layouts__WEBPACK_IMPORTED_MODULE_1__","t","Component","ListLink","react__WEBPACK_IMPORTED_MODULE_0___default","style","display","marginRight","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","to","children","__webpack_exports__","_ref","margin","maxWidth","padding","marginBottom","activeStyle","textShadow","backgroundImage","title","listStyle","float"],"mappings":"6NAiBaA,eAUQC,4FACZC,kBAEL,OADqBC,KAAKC,MAAMC,KAAKC,KAAKC,aAAlCC,SAENC,EAAAC,EAAAC,cAACC,EAAAF,GAAOL,KAAMF,KAAKC,MAAMC,MACvBI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAAA,gDAAAE,EARWZ,CAAkBQ,EAAAC,EAAMI,iFClBvCC,EAAqC,SAACX,GAAD,OACzCY,EAAAN,EAAAC,cAAA,MAAIM,OAASC,uBAAyBC,qBACpCH,EAAAN,EAAAC,cAACS,EAAAV,GAAKW,GAAIjB,EAAMiB,IAAKjB,EAAMkB,YA4B/BC,EAAAb,EAnBiD,SAAAc,GAAA,IAAEF,EAAFE,EAAEF,SAAUjB,EAAZmB,EAAYnB,KAAZ,OAC/CW,EAAAN,EAAAC,cAAA,OAAKM,OAASQ,gBAAkBC,SAAU,IAAMC,yBAC9CX,EAAAN,EAAAC,cAAA,UAAQM,OAASW,wBACfZ,EAAAN,EAAAC,cAACS,EAAAV,GAAKW,GAAG,IAAIQ,aAAeC,kBAAoBC,yBAC9Cf,EAAAN,EAAAC,cAAA,MAAIM,OAASC,mBAAsBb,EAAKC,KAAKC,aAAayB,QAE5DhB,EAAAN,EAAAC,cAAA,MAAIM,OAASgB,iBAAmBC,gBAC9BlB,EAAAN,EAAAC,cAACI,GAASM,GAAG,KAAb,QACAL,EAAAN,EAAAC,cAACI,GAASM,GAAG,SAAb,QACAL,EAAAN,EAAAC,cAACI,GAASM,GAAG,YAAb,WACAL,EAAAN,EAAAC,cAACI,GAASM,GAAG,UAAb,YACAL,EAAAN,EAAAC,cAACI,GAASM,GAAG,UAAb,WAIHC","file":"component---src-pages-index-tsx-36c0447dd28383d4e5ca.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport Layout from \"../layouts\";\nimport React from 'react';\n\n\n// Please note that you can use https://github.com/dotansimha/graphql-code-generator\n// to generate all types from graphQL schema\ninterface IndexPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        siteName: string\n      }\n    }\n  }\n}\n\nexport const pageQuery = graphql`\nquery IndexQuery {\n  site {\n    siteMetadata {\n      siteName\n    }\n  }\n}\n`\n\nexport default class IndexPage extends React.Component<IndexPageProps, {}> {\n  public render() {\n    const { siteName } = this.props.data.site.siteMetadata;\n    return (\n      <Layout data={this.props.data}>\n        <div>\n          <h1>Welcome to Hot Air</h1>\n          <p>What's Legit and What to Quit in Finance and Technology</p>\n          <p>A project by Bryan Willson Berry</p>\n        </div>\n      </Layout>\n    )\n  }\n}\n\n","import React, { MouseEvent, SFC } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'gatsby-link';\n\ninterface ListLinkProps {\n  to: string,\n  children: string\n}\n\nconst ListLink: React.SFC<ListLinkProps> = (props: any) => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n);\n\ninterface IndexLayoutProps {\n  children: any,\n  data: any\n}\n\nconst IndexLayout: React.SFC<IndexLayoutProps> = ({children, data}:{children:any, data:any}) => (\n  <div style={{ margin: `0 auto`, maxWidth: 1000, padding: `1.25rem 1rem` }}>\n    <header style={{ marginBottom: `1.5rem` }}>\n      <Link to=\"/\" activeStyle={{ textShadow: `none`, backgroundImage: `none` }}>\n        <h3 style={{ display: `inline` }}>{data.site.siteMetadata.title}</h3>\n      </Link>\n      <ul style={{ listStyle: `none`, float: `right` }}>\n        <ListLink to=\"/\">Home</ListLink>\n        <ListLink to=\"/blog\">Blog</ListLink>\n        <ListLink to=\"/podcast\">Podcast</ListLink>\n        <ListLink to=\"/learn\">Learning</ListLink>        \n        <ListLink to=\"/about\">About</ListLink>\n\n      </ul>\n    </header>\n    {children}\n  </div>\n);\n\nexport default IndexLayout;\n\n"],"sourceRoot":""}