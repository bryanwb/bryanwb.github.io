{"version":3,"sources":["webpack:///./src/pages/projects/bitcoinvsgold/utils/formatters.js","webpack:///./src/pages/projects/bitcoinvsgold/components/Crosshairs.js","webpack:///./src/pages/projects/bitcoinvsgold/components/Tooltip.js","webpack:///./src/pages/projects/bitcoinvsgold/components/Chart.js"],"names":["commarize","num","unit","Math","floor","toFixed","length","Number","formatNum","symbol","numFormatted","toString","replace","measure","Crosshairs","props","_this","_React$Component","call","this","state","datum","render","_this$props","margin","width","height","coords","show","symbols","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","_vx_shape__WEBPACK_IMPORTED_MODULE_2__","key","from","_vx_point__WEBPACK_IMPORTED_MODULE_3__","x","y","top","to","left","right","strokeDasharray","bottom","Component","__webpack_exports__","Tooltip","react__WEBPACK_IMPORTED_MODULE_3___default","date","toDateString","map","s","name","style","color","Object","_utils_formatters__WEBPACK_IMPORTED_MODULE_4__","close","cap","formatDatum","Rect","react_emotion__WEBPACK_IMPORTED_MODULE_15__","target","HotAirChart","componentWillMount","unlockCrosshairs","lodash_debounce__WEBPACK_IMPORTED_MODULE_19___default","crosshairsLock","handleMouseOver","xToDataAccessor","e","isDragging","cancel","_vx_event__WEBPACK_IMPORTED_MODULE_14__","ownerSVGElement","setState","crosshairsCoords","showCrosshairs","showTooltip","tooltipLeft","tooltipTop","tooltipData","handleMouseOut","hideTooltip","handleDragStart","preventDefault","handleDrag","shiftCb","spacing","sign","movementX","extentsShifted","ceil","abs","handleDragEnd","_this2","data","shift","tooltipOpen","xMax","yMax","d","Date","xScale","_vx_scale__WEBPACK_IMPORTED_MODULE_11__","range","domain","d3_array__WEBPACK_IMPORTED_MODULE_13__","yScale","max","apply","xVal","invert","setUTCHours","setUTCMinutes","setUTCSeconds","index","findIndex","valueOf","console","log","xSpacing","doDrag","bind","highlightedLine","react__WEBPACK_IMPORTED_MODULE_6___default","_vx_group__WEBPACK_IMPORTED_MODULE_8__","cursor","onMouseMove","onMouseUp","onMouseDown","onWheel","onScroll","strokeWidth","_vx_shape__WEBPACK_IMPORTED_MODULE_12__","stroke","onMouseOver","onMouseOut","pointerEvents","linePath","_Crosshairs__WEBPACK_IMPORTED_MODULE_16__","_vx_grid__WEBPACK_IMPORTED_MODULE_9__","_vx_axis__WEBPACK_IMPORTED_MODULE_10__","scale","tickTextFill","label","labelOffset","labelProps","fontSize","_vx_tooltip__WEBPACK_IMPORTED_MODULE_20__","random","_Tooltip__WEBPACK_IMPORTED_MODULE_17__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_7___default","array","isRequired","number","func","showMarketCap","bool","object","string","HotAirChartWithTooltip"],"mappings":"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","file":"component---src-pages-projects-bitcoinvsgold-components-chart-js-49fdd0976f1db151acec.js","sourcesContent":["\nexport const commarize = (num) => {\n  // Alter numbers larger than 1k\n  if (num >= 1e3) {\n    var units = [\"k\", \"M\", \"Billion\", \"Trillion\"];\n    \n    // Divide to get SI Unit engineering style numbers (1e3,1e6,1e9, etc)\n    let unit = Math.floor(((num).toFixed(0).length - 1) / 3) * 3;\n    // Calculate the remainder\n    const formattedNum = ( num / (Number('1e'+unit))).toFixed(1);\n    var unitname = units[Math.floor(unit / 3) - 1]\n    \n    // output number remainder + unitname\n    return formattedNum + ' ' + unitname;\n  }\n  \n  // return formatted original number\n  return num.toFixed(2);\n};\n\nexport const formatNum = (symbol, num) => {\n  let numFormatted = num.toFixed(2).toString().replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\n  if (symbol.measure) {\n    numFormatted += symbol.measure;\n  }\n  // this magic incantation adds commas in the thousands place\n  return numFormatted\n};\n","import React from 'react';\nimport { Line } from '@vx/shape';\nimport { Point } from '@vx/point';\n\nclass Crosshairs extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {datum: props.datum};\n  }\n\n  render() {\n    const {\n      margin,\n      width,\n      height,\n      datum,\n      coords,\n      show,\n      symbols,\n    } = this.props;\n    \n    const showCrosshairs = show && coords;\n\n    return (\n      showCrosshairs &&\n      <React.Fragment>\n          <Line\n            key=\"crosshairs-horizontal\"\n            from={new Point({x: 0, y: coords.y - margin.top})}\n            to={new Point({x: width - margin.left - margin.right,\n                           y: coords.y - margin.top})}\n            strokeDasharray={[4]}\n          />              \n          <Line\n            key=\"crosshairs-vertical\"\n            from={new Point({x: coords.x - margin.left, y: 0})}\n            to={new Point({x: coords.x - margin.left,\n                           y: height - margin.top - margin.bottom})}\n            strokeDasharray={[4]}\n          />\n      </React.Fragment>\n    );\n\n\n  }\n  \n}\n\nexport default Crosshairs;\n","import React from 'react';\nimport { commarize, formatNum } from '../utils/formatters';\n\n/* function commarize(num) {\n *   // Alter numbers larger than 1k\n *   if (num >= 1e3) {\n *     var units = [\"k\", \"M\", \"Billion\", \"Trillion\"];\n *     \n *     // Divide to get SI Unit engineering style numbers (1e3,1e6,1e9, etc)\n *     let unit = Math.floor(((num).toFixed(0).length - 1) / 3) * 3;\n *     // Calculate the remainder\n *     const formattedNum = ( num / (Number('1e'+unit))).toFixed(1);\n *     var unitname = units[Math.floor(unit / 3) - 1]\n *     \n *     // output number remainder + unitname\n *     return formattedNum + ' ' + unitname;\n *   }\n *   \n *   // return formatted original number\n *   return num.toFixed(2);\n * }\n * const formatNum = (symbol, num) => {\n *   let numFormatted = num.toFixed(2).toString().replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\n *   if (symbol.measure) {\n *     numFormatted += symbol.measure;\n *   }\n *   // this magic incantation adds commas in the thousands place\n *   return numFormatted\n * }; */\n\nconst formatDatum = (symbol, datum) => {\n  return (\n    <div key={symbol.name}>\n        <div>\n            <span style={{color: symbol.color}}>●</span> {symbol.name}\n        </div>\n        <div>\n            &emsp;Price (USD): {formatNum(symbol, datum[symbol.name].close)}\n        </div>\n        {datum[symbol.name].cap &&\n        <div>\n            &emsp;Market Cap (USD): {commarize(datum[symbol.name].cap)}\n        </div>\n        }\n    </div>\n  );\n};\n\nclass Tooltip extends React.Component {\n\n  render() {\n    const {\n      datum,\n      symbols,\n    } = this.props;\n    \n    return (\n      datum &&\n      <div>\n          <div>{datum.date.toDateString()}</div>\n          {symbols.map((s) => formatDatum(s, datum))}\n      </div>\n    );\n\n  }\n\n}\n\nexport default Tooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Group } from '@vx/group';\nimport { Grid } from '@vx/grid';\nimport { AxisRight, AxisBottom } from '@vx/axis';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { LinePath } from '@vx/shape';\nimport { extent, max, scan } from 'd3-array';\nimport { localPoint } from '@vx/event';\nimport styled from 'react-emotion';\nimport Crosshairs from './Crosshairs';\nimport Tooltip from './Tooltip';\nimport { Object } from 'core-js';\nimport debounce from 'lodash/debounce';\nimport { withTooltip, TooltipWithBounds } from '@vx/tooltip';\n\nconst Rect = styled('rect')`\n  cursor: crosshair;\n  /* pointer-events: all; */\n  visibility: hidden;\n  :active {\n    cursor: grab;\n  }\n`;\n\n\nclass HotAirChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDragging: false,\n      datum: null,\n      crosshairsCoords: null,\n      showCrosshairs: false,\n    };\n    this.crosshairsLock = false;\n  }\n\n  componentWillMount = () => {\n    this.unlockCrosshairs = debounce(() => this.crosshairsLock = false, 10);\n  };\n  \n  handleMouseOver = (xToDataAccessor, e) => {\n    if (!this.state.isDragging) {\n      // cancel an early unlock\n      this.unlockCrosshairs.cancel();\n      \n      let coords = localPoint(e.target.ownerSVGElement, e);\n\n      const datum = xToDataAccessor(coords.x);\n\n      this.crosshairsLock = true;\n      this.setState((state) => ({\n        isDragging: state.isDragging,\n        datum: datum,\n        crosshairsCoords: coords,\n        showCrosshairs: true,\n      }));\n\n      this.props.showTooltip({\n        tooltipLeft: coords.x,\n        tooltipTop: coords.y,\n        tooltipData: datum,\n      });\n      \n      // unlock crosshairs after a delay\n      this.unlockCrosshairs();\n    }\n  };\n\n  handleMouseOut = (hideTooltip) => {\n    if (!this.crosshairsLock) {\n      \n      this.setState((state) => ({\n        isDragging: state.isDragging,\n        datum: state.datum,\n        showCrosshairs: false,\n      }));\n      hideTooltip();\n    }\n  };\n  \n  handleDragStart = (e) => {\n    e.preventDefault();\n    this.setState({isDragging: true});\n  };\n  \n  handleDrag = (shiftCb, spacing, e) => {\n    if (this.state.isDragging) {\n      e.preventDefault();\n      // we want to go the opposite way of the actual movement\n      const sign = -Math.sign(e.movementX);\n      const extentsShifted = Math.ceil(Math.abs(e.movementX) / Math.floor(spacing));\n      extentsShifted > 0 && shiftCb(sign * extentsShifted);\n    }\n  };\n  \n  handleDragEnd = (e) => {\n    e.preventDefault();\n    if (this.state.isDragging) {\n      this.setState({isDragging: false});\n    }\n  };\n\n\n  render() {\n\n    const {\n      width,\n      height,\n      margin,\n      data,\n      shift,\n      symbols,\n      tooltipData,\n      tooltipTop,\n      tooltipLeft,\n      tooltipOpen,\n      hideTooltip,\n    } = this.props;\n    \n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    const x = d => new Date(d.date);\n    \n    const maxYScale = (d) => Math.max(...symbols.map(s => d[s.name].close));\n    \n    const xScale = scaleTime({\n      range: [0, xMax],\n      domain: extent(data, x)\n    });\n    const yScale = scaleLinear({\n      range: [yMax, 0],\n      domain: [0, max(data, maxYScale)],\n    });\n\n    // maps a value on the X axis to the corresponding datum\n    const xToDataAccessor = (xVal) => {\n      const date = xScale.invert(xVal - margin.left);\n      date.setUTCHours(0);\n      date.setUTCMinutes(0);\n      date.setUTCSeconds(0);\n      const index = data.findIndex((d) => d.date.valueOf() >= date.valueOf());\n      if (index === -1) {\n        console.log(`Could not find matching data point for ${date}`);\n        return null;\n      } else {\n        return data[index];\n      }\n    };\n    \n    const xSpacing = xScale(data[1].date) - xScale(data[0].date);\n    const shiftCb = this.props.shiftCb;\n    const doDrag = this.handleDrag.bind(this, shiftCb, xSpacing);\n    const highlightedLine = this.props.highlightedLine;\n\n    const linePath = (symbol, data) => {\n      const y = (d) => d[symbol.name].close;\n      const strokeWidth = highlightedLine === symbol.name ? 6 : 2\n      return (\n        <LinePath\n          key={symbol.name}\n          data={data}\n          xScale={xScale}\n          yScale={yScale}\n          x={x}\n          y={y}\n          stroke={symbol.color}\n          strokeWidth={strokeWidth}\n          onMouseOver={() => e => this.handleMouseOver(xToDataAccessor, e)}\n          onMouseOut={() => () => this.handleMouseOut(hideTooltip)}\n          style={{pointerEvents: 'all'}}\n        />\n      );\n    };\n\n    return (\n      <React.Fragment>\n          <svg width={width} height={height}>\n              <Group top={margin.top} left={margin.left} style={{cursor: 'crosshair'}}>\n                  <Rect\n                    width={width}\n                    height={height}\n                    onMouseMove={(e) => doDrag(e)}\n                    onMouseUp={this.handleDragEnd}\n                    onMouseDown={this.handleDragStart}\n                    onWheel={this.props.onScroll}>\n                  </Rect>\n                  {symbols.map(s => linePath(s, data))}\n                  {<Crosshairs\n                     margin={margin}\n                     width={width}\n                     height={height}\n                     show={this.state.showCrosshairs}\n                     coords={this.state.crosshairsCoords}\n                     datum={this.state.datum}\n                  />}\n                  <Grid\n                    xScale={xScale}\n                    yScale={yScale}\n                    width={width - margin.left - margin.right}\n                    height={height - margin.top - margin.bottom}\n                  />\n                  <AxisBottom\n                    scale={xScale}\n                    top={yMax}\n                    stroke='#1b1a1e'\n                    tickTextFill=\"#1b1a1e\"\n                  />\n                  <AxisRight\n                    scale={yScale}\n                    top={0}\n                    left={width - margin.left - margin.right}\n                    label='Close Price ($)'\n                    labelOffset={50}\n                    labelProps={{fontSize: 15}}\n                    stroke=\"#1b1a1e\"\n                    tickTextFill=\"#1b1a1e\"\n                  />\n              </Group>\n          </svg>\n          {tooltipOpen && \n          <TooltipWithBounds\n            key={Math.random()}\n            top={tooltipTop}\n            left={tooltipLeft}\n          >\n              <Tooltip symbols={symbols} datum={tooltipData} />\n          </TooltipWithBounds>\n          }\n      </React.Fragment>\n    );\n  }\n}\n\nHotAirChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  symbols: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  shiftCb: PropTypes.func,\n  showMarketCap: PropTypes.bool,\n  margin: PropTypes.object.isRequired,\n  highlightedLine: PropTypes.string,\n  onScroll: PropTypes.func,\n};\n\nconst HotAirChartWithTooltip = withTooltip(HotAirChart);\n\nexport default HotAirChartWithTooltip;\n"],"sourceRoot":""}