{"version":3,"sources":["webpack:///./src/pages/projects/bitcoinvsgold/utils/formatters.js","webpack:///./src/pages/projects/bitcoinvsgold/components/Crosshairs.js","webpack:///./src/pages/projects/bitcoinvsgold/components/Tooltip.js","webpack:///./src/pages/projects/bitcoinvsgold/components/Chart.js"],"names":["commarize","num","unit","Math","floor","toFixed","length","Number","formatNum","symbol","numFormatted","toString","replace","measure","Crosshairs","props","_this","_React$Component","call","this","state","datum","render","_this$props","margin","width","height","coords","show","symbols","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","_vx_shape__WEBPACK_IMPORTED_MODULE_2__","key","from","Point","x","y","top","to","left","right","strokeDasharray","bottom","React","Component","Tooltip","react__WEBPACK_IMPORTED_MODULE_3___default","date","toDateString","map","s","name","style","color","close","cap","formatDatum","Rect","styled","target","HotAirChart","componentWillMount","unlockCrosshairs","debounce","crosshairsLock","handleMouseOver","xToDataAccessor","e","isDragging","cancel","localPoint","ownerSVGElement","setState","crosshairsCoords","showCrosshairs","showTooltip","tooltipLeft","tooltipTop","tooltipData","handleMouseOut","hideTooltip","handleDragStart","preventDefault","handleDrag","shiftCb","spacing","sign","movementX","extentsShifted","ceil","abs","handleDragEnd","_this2","data","shift","tooltipOpen","xMax","yMax","d","Date","xScale","scaleTime","range","domain","extent","yScale","scaleLinear","max","apply","xVal","invert","setUTCHours","setUTCMinutes","setUTCSeconds","index","findIndex","valueOf","console","log","xSpacing","doDrag","bind","highlightedLine","react__WEBPACK_IMPORTED_MODULE_6___default","_vx_group__WEBPACK_IMPORTED_MODULE_8__","cursor","onMouseMove","onMouseUp","onMouseDown","onWheel","onScroll","strokeWidth","_vx_shape__WEBPACK_IMPORTED_MODULE_12__","stroke","onMouseOver","onMouseOut","pointerEvents","linePath","_Crosshairs__WEBPACK_IMPORTED_MODULE_16__","_vx_grid__WEBPACK_IMPORTED_MODULE_9__","_vx_axis__WEBPACK_IMPORTED_MODULE_10__","scale","tickTextFill","label","labelOffset","labelProps","fontSize","_vx_tooltip__WEBPACK_IMPORTED_MODULE_20__","random","_Tooltip__WEBPACK_IMPORTED_MODULE_17__","propTypes","PropTypes","array","isRequired","number","func","showMarketCap","bool","object","string","HotAirChartWithTooltip","withTooltip"],"mappings":"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","file":"component---src-pages-projects-bitcoinvsgold-components-chart-js-97869d529bd7b20fe833.js","sourcesContent":["\nexport const commarize = (num) => {\n  // Alter numbers larger than 1k\n  if (num >= 1e3) {\n    var units = [\"k\", \"M\", \"Billion\", \"Trillion\"];\n    \n    // Divide to get SI Unit engineering style numbers (1e3,1e6,1e9, etc)\n    let unit = Math.floor(((num).toFixed(0).length - 1) / 3) * 3;\n    // Calculate the remainder\n    const formattedNum = ( num / (Number('1e'+unit))).toFixed(1);\n    var unitname = units[Math.floor(unit / 3) - 1]\n    \n    // output number remainder + unitname\n    return formattedNum + ' ' + unitname;\n  }\n  \n  // return formatted original number\n  return num.toFixed(2);\n};\n\nexport const formatNum = (symbol, num) => {\n  let numFormatted = num.toFixed(2).toString().replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\n  if (symbol.measure) {\n    numFormatted += symbol.measure;\n  }\n  // this magic incantation adds commas in the thousands place\n  return numFormatted\n};\n","import React from 'react';\nimport { Line } from '@vx/shape';\nimport { Point } from '@vx/point';\n\nclass Crosshairs extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {datum: props.datum};\n  }\n\n  render() {\n    const {\n      margin,\n      width,\n      height,\n      datum,\n      coords,\n      show,\n      symbols,\n    } = this.props;\n    \n    const showCrosshairs = show && coords;\n\n    return (\n      showCrosshairs &&\n      <React.Fragment>\n          <Line\n            key=\"crosshairs-horizontal\"\n            from={new Point({x: 0, y: coords.y - margin.top})}\n            to={new Point({x: width - margin.left - margin.right,\n                           y: coords.y - margin.top})}\n            strokeDasharray={[4]}\n          />              \n          <Line\n            key=\"crosshairs-vertical\"\n            from={new Point({x: coords.x - margin.left, y: 0})}\n            to={new Point({x: coords.x - margin.left,\n                           y: height - margin.top - margin.bottom})}\n            strokeDasharray={[4]}\n          />\n      </React.Fragment>\n    );\n\n\n  }\n  \n}\n\nexport default Crosshairs;\n","import React from 'react';\nimport { commarize, formatNum } from '../utils/formatters';\n\n/* function commarize(num) {\n *   // Alter numbers larger than 1k\n *   if (num >= 1e3) {\n *     var units = [\"k\", \"M\", \"Billion\", \"Trillion\"];\n *     \n *     // Divide to get SI Unit engineering style numbers (1e3,1e6,1e9, etc)\n *     let unit = Math.floor(((num).toFixed(0).length - 1) / 3) * 3;\n *     // Calculate the remainder\n *     const formattedNum = ( num / (Number('1e'+unit))).toFixed(1);\n *     var unitname = units[Math.floor(unit / 3) - 1]\n *     \n *     // output number remainder + unitname\n *     return formattedNum + ' ' + unitname;\n *   }\n *   \n *   // return formatted original number\n *   return num.toFixed(2);\n * }\n * const formatNum = (symbol, num) => {\n *   let numFormatted = num.toFixed(2).toString().replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\n *   if (symbol.measure) {\n *     numFormatted += symbol.measure;\n *   }\n *   // this magic incantation adds commas in the thousands place\n *   return numFormatted\n * }; */\n\nconst formatDatum = (symbol, datum) => {\n  return (\n    <div key={symbol.name}>\n        <div>\n            <span style={{color: symbol.color}}>●</span> {symbol.name}\n        </div>\n        <div>\n            &emsp;Price (USD): {formatNum(symbol, datum[symbol.name].close)}\n        </div>\n        {datum[symbol.name].cap &&\n        <div>\n            &emsp;Market Cap (USD): {commarize(datum[symbol.name].cap)}\n        </div>\n        }\n    </div>\n  );\n};\n\nclass Tooltip extends React.Component {\n\n  render() {\n    const {\n      datum,\n      symbols,\n    } = this.props;\n    \n    return (\n      datum &&\n      <div>\n          <div>{datum.date.toDateString()}</div>\n          {symbols.map((s) => formatDatum(s, datum))}\n      </div>\n    );\n\n  }\n\n}\n\nexport default Tooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Group } from '@vx/group';\nimport { Grid } from '@vx/grid';\nimport { AxisRight, AxisBottom } from '@vx/axis';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { LinePath } from '@vx/shape';\nimport { extent, max, scan } from 'd3-array';\nimport { localPoint } from '@vx/event';\nimport styled from 'react-emotion';\nimport Crosshairs from './Crosshairs';\nimport Tooltip from './Tooltip';\nimport { Object } from 'core-js';\nimport debounce from 'lodash/debounce';\nimport { withTooltip, TooltipWithBounds } from '@vx/tooltip';\n\nconst Rect = styled('rect')`\n  cursor: crosshair;\n  /* pointer-events: all; */\n  visibility: hidden;\n  :active {\n    cursor: grab;\n  }\n`;\n\n\nclass HotAirChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDragging: false,\n      datum: null,\n      crosshairsCoords: null,\n      showCrosshairs: false,\n    };\n    this.crosshairsLock = false;\n  }\n\n  componentWillMount = () => {\n    this.unlockCrosshairs = debounce(() => this.crosshairsLock = false, 10);\n  };\n  \n  handleMouseOver = (xToDataAccessor, e) => {\n    if (!this.state.isDragging) {\n      // cancel an early unlock\n      this.unlockCrosshairs.cancel();\n      \n      let coords = localPoint(e.target.ownerSVGElement, e);\n\n      const datum = xToDataAccessor(coords.x);\n\n      this.crosshairsLock = true;\n      this.setState((state) => ({\n        isDragging: state.isDragging,\n        datum: datum,\n        crosshairsCoords: coords,\n        showCrosshairs: true,\n      }));\n\n      this.props.showTooltip({\n        tooltipLeft: coords.x,\n        tooltipTop: coords.y,\n        tooltipData: datum,\n      });\n      \n      // unlock crosshairs after a delay\n      this.unlockCrosshairs();\n    }\n  };\n\n  handleMouseOut = (hideTooltip) => {\n    if (!this.crosshairsLock) {\n      \n      this.setState((state) => ({\n        isDragging: state.isDragging,\n        datum: state.datum,\n        showCrosshairs: false,\n      }));\n      hideTooltip();\n    }\n  };\n  \n  handleDragStart = (e) => {\n    e.preventDefault();\n    this.setState({isDragging: true});\n  };\n  \n  handleDrag = (shiftCb, spacing, e) => {\n    if (this.state.isDragging) {\n      e.preventDefault();\n      // we want to go the opposite way of the actual movement\n      const sign = -Math.sign(e.movementX);\n      const extentsShifted = Math.ceil(Math.abs(e.movementX) / Math.floor(spacing));\n      extentsShifted > 0 && shiftCb(sign * extentsShifted);\n    }\n  };\n  \n  handleDragEnd = (e) => {\n    e.preventDefault();\n    if (this.state.isDragging) {\n      this.setState({isDragging: false});\n    }\n  };\n\n\n  render() {\n\n    const {\n      width,\n      height,\n      margin,\n      data,\n      shift,\n      symbols,\n      tooltipData,\n      tooltipTop,\n      tooltipLeft,\n      tooltipOpen,\n      hideTooltip,\n    } = this.props;\n    \n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    const x = d => new Date(d.date);\n    \n    const maxYScale = (d) => Math.max(...symbols.map(s => d[s.name].close));\n    \n    const xScale = scaleTime({\n      range: [0, xMax],\n      domain: extent(data, x)\n    });\n    const yScale = scaleLinear({\n      range: [yMax, 0],\n      domain: [0, max(data, maxYScale)],\n    });\n\n    // maps a value on the X axis to the corresponding datum\n    const xToDataAccessor = (xVal) => {\n      const date = xScale.invert(xVal - margin.left);\n      date.setUTCHours(0);\n      date.setUTCMinutes(0);\n      date.setUTCSeconds(0);\n      const index = data.findIndex((d) => d.date.valueOf() >= date.valueOf());\n      if (index === -1) {\n        console.log(`Could not find matching data point for ${date}`);\n        return null;\n      } else {\n        return data[index];\n      }\n    };\n    \n    const xSpacing = xScale(data[1].date) - xScale(data[0].date);\n    const shiftCb = this.props.shiftCb;\n    const doDrag = this.handleDrag.bind(this, shiftCb, xSpacing);\n    const highlightedLine = this.props.highlightedLine;\n\n    const linePath = (symbol, data) => {\n      const y = (d) => d[symbol.name].close;\n      const strokeWidth = highlightedLine === symbol.name ? 6 : 2\n      return (\n        <LinePath\n          key={symbol.name}\n          data={data}\n          xScale={xScale}\n          yScale={yScale}\n          x={x}\n          y={y}\n          stroke={symbol.color}\n          strokeWidth={strokeWidth}\n          onMouseOver={() => e => this.handleMouseOver(xToDataAccessor, e)}\n          onMouseOut={() => () => this.handleMouseOut(hideTooltip)}\n          style={{pointerEvents: 'all'}}\n        />\n      );\n    };\n\n    return (\n      <React.Fragment>\n          <svg width={width} height={height}>\n              <Group top={margin.top} left={margin.left} style={{cursor: 'crosshair'}}>\n                  <Rect\n                    width={width}\n                    height={height}\n                    onMouseMove={(e) => doDrag(e)}\n                    onMouseUp={this.handleDragEnd}\n                    onMouseDown={this.handleDragStart}\n                    onWheel={this.props.onScroll}>\n                  </Rect>\n                  {symbols.map(s => linePath(s, data))}\n                  {<Crosshairs\n                     margin={margin}\n                     width={width}\n                     height={height}\n                     show={this.state.showCrosshairs}\n                     coords={this.state.crosshairsCoords}\n                     datum={this.state.datum}\n                  />}\n                  <Grid\n                    xScale={xScale}\n                    yScale={yScale}\n                    width={width - margin.left - margin.right}\n                    height={height - margin.top - margin.bottom}\n                  />\n                  <AxisBottom\n                    scale={xScale}\n                    top={yMax}\n                    stroke='#1b1a1e'\n                    tickTextFill=\"#1b1a1e\"\n                  />\n                  <AxisRight\n                    scale={yScale}\n                    top={0}\n                    left={width - margin.left - margin.right}\n                    label='Close Price ($)'\n                    labelOffset={50}\n                    labelProps={{fontSize: 15}}\n                    stroke=\"#1b1a1e\"\n                    tickTextFill=\"#1b1a1e\"\n                  />\n              </Group>\n          </svg>\n          {tooltipOpen && \n          <TooltipWithBounds\n            key={Math.random()}\n            top={tooltipTop}\n            left={tooltipLeft}\n          >\n              <Tooltip symbols={symbols} datum={tooltipData} />\n          </TooltipWithBounds>\n          }\n      </React.Fragment>\n    );\n  }\n}\n\nHotAirChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  symbols: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  shiftCb: PropTypes.func,\n  showMarketCap: PropTypes.bool,\n  margin: PropTypes.object.isRequired,\n  highlightedLine: PropTypes.string,\n  onScroll: PropTypes.func,\n};\n\nconst HotAirChartWithTooltip = withTooltip(HotAirChart);\n\nexport default HotAirChartWithTooltip;\n"],"sourceRoot":""}