{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<p>Bryan and Miko talk about how banking makes no sense and how Bitcoin might impact the global financial system.</p>\n<iframe style=\"border: none\" src=\"//html5-player.libsyn.com/embed/episode/id/6963446/height/90/theme/custom/autoplay/no/autonext/no/thumbnail/yes/preload/no/no_addthis/no/direction/backward/render-playlist/no/custom-color/87A93A/\" height=\"90\" width=\"100%\" scrolling=\"no\"  allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>\n<h3>Banking myths</h3>\n<p>Myth number one: Banks lend out depositors' money as loans. <strong>False. Banks lend against depositors money. Each new loan actually creates the money that is loaned with an entry in an electronic ledger.</strong></p>\n<p>Myth number two: Banks have to keep 10% of each one dollar (Reserve Ratio) of\ndeposits and this constrains how many loans the bank can make. Due to the\nreserve ratio, the amount of new money created by bank deposits\ncan be calculated with the Money Multiplier.</p>\n<p><strong>No longer true. See the New York Fed's <a href=\"https://www.newyorkfed.org/research/epr/02v08n1/0205benn/0205benn.html\">article</a> on why reserve requirements are no longer binding</strong></p>\n<p>Myth number 3: national savings == national investment</p>\n<p><strong>Not really. In part because the Leverage Ratio is so large and because market forces\nactually decide where money is invested</strong></p>\n<p>Myth number 4: The U.S. dollar is backed by the gold in Fort Knox.</p>\n<p><strong>Not since 1971 when <a href=\"https://mises.org/wire/today-1971-president-nixon-closes-gold-window\">Nixon closed the Gold Window</a></strong></p>\n<p>Given that we have debunked these myths, we need to answer some glaring questions</p>\n<ol>\n<li>Why do banks take deposits?</li>\n<li>Why do banks pay interest our deposit accounts when they don't actually lend out our money?\n3.. What constrains how much money banks can create?</li>\n<li>Do new loans increase a bank's capital and thus its ability to yet\nmake even more loans?</li>\n<li>How does the Fed keep interest rates low and are there risks to keeping interests rates low? (hint: quantitative easing)</li>\n<li>What happens when I transfer money in my account to another bank? What happens when\nI transfer money from a U.S. bank to one not in the United States?</li>\n</ol>\n<h3>If/when will the U.S. devalue its currency and how?</h3>\n<p>Miko thinks not but this entirely depends on the trade relationship between the U.S. and China.</p>\n<h3>Where do cryptocurrencies fit into this?</h3>\n<p>Many people in the Bitcoin community believe that Bitcoin will eventually supplant the U.S. dollar\nas the world's reserve currency. They think of Bitcoin as <a href=\"https://www.amazon.com/Bitcoin-Standard-Decentralized-Alternative-Central/dp/1119473861\">a better Gold Standard</a></p>\n<h3>Summing up</h3>\n<p>How the banking system actually works defies our intuitions about it. Banking in our modern world really\nis fucking insane.</p>\n<h3>Picks</h3>\n<p>Bryan</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=WQui_3Hpmmc&#x26;list=PL8FB14A2200B87185\">Robert Shiller's lectures on Understanding Financial Markets</a></li>\n<li><a href=\"https://noded.org/\">Noded Bitcoin podcast</a></li>\n<li><a href=\"https://epicenter.tv/\">Epicenter podcast</a></li>\n<li><a href=\"https://www.youtube.com/user/PositiveMoneyUK\">Positive Money series</a></li>\n</ul>","id":"59f892da-09fa-559e-b8d1-6e9bbbf63a10","excerpt":"Bryan and Miko talk about how banking makes no sense and how Bitcoin might impact the global financial system. Banking myths Myth number oneâ€¦","frontmatter":{"path":"/podcast/banking-is-insane","date":"24 August, 2018","title":"Episode 1 - Banking is Fucking insane","tags":"podcast"}}},{"node":{"html":"<p>Some months ago I decided to reorient my development career from the DevOps space to web\ndevelopment with JavaScript. I at first tried to apply my editor of choice\n(<a href=\"https://www.gnu.org/software/emacs/\">emacs</a>)but was continually frustrated by\nthe mediocre support for working JavaScript, particularly compared to\nPython. After wasting at least a day trying to get my Emacs config to support\nJavaScript as well as I had it for Python I came across the blog post <a href=\"https://swizec.com/blog/vscode-better-editor-emacs/swizec/7921\">10 Years\nof love for Emacs Undone by one week of\nVSCode</a>. The\ntitle really struck me as I have spent exactly 10 years with Emacs myself. I decided\nto top swimming upstream and jump wholeheartedly into VS Code. It has been a mixed experience.</p>\n<p>I was instantly struck how amazing VS Code's support is for the JavaScript\nlanguage, libraries, and the web environment. Every tutorial on react, Vue.js, Electron, you name it, recommends using VS Code. My VS Code experience became even better when I\nlearned to drop <code>//@ts-check</code> in every file.  VS Code's language support is so\nawesome that I highly doubt any other editor will ever seriously compete with it\nin that regard. At the same time, I hit a pretty significant pain point\ninstantly. I use emacs keybindings everywhere, in the shell, browser, you name\nit. On OS X, <a href=\"https://pqrs.org/osx/karabiner/\">Karabiner</a> mapped those bindings\nfor me and now on linux laptop with GNOME it is a top-level feature. In VS Code\nI foudnd that I was constantly closing the editor accidentally or deleting a\ntext in a buffer with the most common commands that I use thousands of times a\nday. Here are just a few. I probably have ~100 in muscle memory.</p>\n<ul>\n<li>M-f forward word</li>\n<li>M-b backward word</li>\n<li>C-w cut text</li>\n<li>M-w copy text</li>\n<li>C-SPACE start a selection</li>\n<li>C-a beginning line</li>\n<li>C-e end of line</li>\n<li>M-a back paragraph</li>\n<li>M-e forward paragraph</li>\n<li>C-s search forward</li>\n<li>C-j Change buffer</li>\n<li>and many more</li>\n</ul>\n<p>I found an <a href=\"https://github.com/SebastianZaha/vscode-emacs-friendly\">emacs plugin for VS Code</a> but it only muddled the situation memory as it only supported some\ncommands and then with annoying bugs that made the plugin more trouble than it was worth.</p>\n<p>I dropped the emacs plugin and tried to do things the VS Code way. It only kind of worked for me but I soon encountered more hurdles. As a developer, there is a whole set of things we do that are project-related tasks such as:</p>\n<ul>\n<li>Working with git</li>\n<li>Renaming files, moving them around</li>\n<li>Maintaining a personal TODO list and logging errors, troubleshooting information in a personal log</li>\n<li>Executing shell commands</li>\n<li>Writing documentation in markdown, ReST, asciidoc</li>\n</ul>\n<p>While VS Code likely has some support for these, I found the VS Code plugins in these areas lacking\nwhen I tried them. For example, I found jumping between projects with <a href=\"https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager\">Project Manager</a> very poor in comparison to Emacs' incredible <a href=\"https://github.com/bbatsov/projectile\">Projectile</a>. It is important to note that the Project Manager addon may have improved significantly since I last used it a few months ago. The existing git addons also pale in comparison to Emacs' fantastic <a href=\"https://magit.vc/\">git interface</a>.</p>\n<p>I am one of those crazy people that runs a terminal inside of emacs. I even have a keybinding (M-j) that\nI use to toggle between character and line mode in the terminal. VS Code's terminal is OK but nothing to write home about.</p>\n<p>I use Emacs <a href=\"https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired.html\">dired</a> mode for manipulating files and directories. It works ridiculously well.</p>\n<p>More than magit, projectile, dired, I missed emacs' <a href=\"https://oremacs.com/swiper/\">ivy</a> completion framework more than anything else. You really have to see it to believe it.</p>\n<p><a href=\"https://youtu.be/VvnJQpTFVDc\" title=\"Ivy in Action\"><img src=\"http://img.youtube.com/vi/VvnJQpTFVDc/0.jpg\" alt=\"Ivy in Action\"></a></p>\n<p>So while I could use VS Code for writing JavaScript, I still found myself spending 30-50% of my work time in Emacs. The mismatch between keybindings in VSCode and rest of my tools just kept tying my fingers in knots.</p>\n<p>So far I have talked a whole lot about the Emacs features that I miss in VS Code. But surely, you ask, won't VS Code implement all of those features even better than Emacs given the VS Code teams extensive developer resources? Maybe, but I would be surprised if they did. I doubt the VS Code team intends to give it a kitchen sink of capabilities that we see in Emacs.</p>\n<p>After one month, I decided to reinvestigate using Emacs for JavaScript. I came upon the awesome <a href=\"https://github.com/ananthakumaran/tide\">Tide-mode</a>. It took me about a day but I got it working to my satisfaction. It does not hold a candle to VS Code but it provides me enough features to be productive in JavaScript.</p>\n<p>Some of the features tide-mode provides:</p>\n<ul>\n<li>auto-completion (via company-mode)</li>\n<li>linting</li>\n<li>syntax-checking (together w/ flycheck)</li>\n<li>documentation at point</li>\n<li>basic refactoring</li>\n</ul>\n<p>Here is tide-mode in action</p>\n<p><img src=\"http://i.imgur.com/jEwgPsd.gif\" alt=\"tide in action\"></p>\n<p>A few notes on using tide-mode:</p>\n<ol>\n<li>You have to drop a jsconfig.json (for JavaScript) or tsconfig.json (for TypeScript) in order to use it</li>\n<li>You have to install typescript into your projects for it to work optimally. As it leverages the <code>tsserver</code> that ships with TypeScript. Note that it does not need to be a project dependency. You can install it thus with <code>npm install typescript</code></li>\n<li>I am using Emacs 26. Not sure how well this works with Emacs 25</li>\n</ol>\n<p>I may be mistaken but I believe the <code>tsserver</code> that ships with TypeScript was developed by the same team that makes VS Code. It is not without irony that the Emacs mode I am using to replace of VS Code depends on software developed by the VS Code team.</p>\n<p>VS Code is an excellent IDE and I would recommend any new software developer to use it. But with the excellent tide-mode, I no longer need to.</p>\n<p>You can find my emacs configuration for JavaScript <a href=\"https://github.com/bryanwb/dotfiles/blob/master/emacs.d/init.el#L845-L909\">here</a>.</p>","id":"11bb0886-79c0-52c2-85f1-9dee15d91acd","excerpt":"Some months ago I decided to reorient my development career from the DevOps space to web\ndevelopment with JavaScript. I at first tried toâ€¦","frontmatter":{"path":"/blog/goodbye-vscode","date":"23 August, 2018","title":"Goodbye VSCode, Hello Emacs (Again)","tags":"blog"}}}]}},"pageContext":{}}