{"version":3,"sources":["webpack:///./src/pages/projects/bitcoinvsgold/utils/formatters.js","webpack:///./src/pages/projects/bitcoinvsgold/components/Crosshairs.js","webpack:///./src/pages/projects/bitcoinvsgold/components/Tooltip.js","webpack:///./src/pages/projects/bitcoinvsgold/components/Chart.js"],"names":["commarize","num","unit","Math","floor","toFixed","length","Number","formatNum","symbol","numFormatted","toString","replace","measure","Crosshairs","props","_this","_React$Component","call","this","state","datum","render","_this$props","margin","width","height","coords","show","symbols","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","_vx_shape__WEBPACK_IMPORTED_MODULE_2__","key","from","_vx_point__WEBPACK_IMPORTED_MODULE_3__","x","y","top","to","left","right","strokeDasharray","bottom","e","Component","__webpack_exports__","default","u","266","t","r","n","o","i","s","Tooltip","react__WEBPACK_IMPORTED_MODULE_2___default","date","toDateString","map","name","style","color","Object","_utils_formatters__WEBPACK_IMPORTED_MODULE_3__","close","cap","l","268","c","h","d","m","f","p","g","b","v","w","D","Rect","react_emotion__WEBPACK_IMPORTED_MODULE_13__","target","HotAirChart","componentWillMount","unlockCrosshairs","lodash_debounce__WEBPACK_IMPORTED_MODULE_17___default","crosshairsLock","handleMouseOver","xToDataAccessor","isDragging","cancel","_vx_event__WEBPACK_IMPORTED_MODULE_12__","ownerSVGElement","setState","crosshairsCoords","showCrosshairs","showTooltip","tooltipLeft","tooltipTop","tooltipData","handleMouseOut","hideTooltip","handleDragStart","preventDefault","handleDrag","shiftCb","spacing","sign","movementX","extentsShifted","ceil","abs","handleDragEnd","_this2","data","shift","tooltipOpen","xMax","yMax","Date","xScale","_vx_scale__WEBPACK_IMPORTED_MODULE_9__","range","domain","d3_array__WEBPACK_IMPORTED_MODULE_11__","yScale","max","apply","xVal","invert","setUTCHours","setUTCMinutes","setUTCSeconds","index","findIndex","valueOf","console","log","xSpacing","doDrag","bind","highlightedLine","react__WEBPACK_IMPORTED_MODULE_4___default","_vx_group__WEBPACK_IMPORTED_MODULE_6__","cursor","onMouseMove","onMouseUp","onMouseDown","onWheel","onScroll","strokeWidth","_vx_shape__WEBPACK_IMPORTED_MODULE_10__","stroke","onMouseOver","onMouseOut","pointerEvents","_Crosshairs__WEBPACK_IMPORTED_MODULE_14__","_vx_grid__WEBPACK_IMPORTED_MODULE_7__","_vx_axis__WEBPACK_IMPORTED_MODULE_8__","scale","tickTextFill","label","labelOffset","labelProps","fontSize","_vx_tooltip__WEBPACK_IMPORTED_MODULE_18__","random","_Tooltip__WEBPACK_IMPORTED_MODULE_15__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_5___default","array","isRequired","number","func","showMarketCap","bool","object","string","HotAirChartWithTooltip","M"],"mappings":"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","file":"component---src-pages-projects-bitcoinvsgold-components-chart-js-9994c0a1458ff427cb3f.js","sourcesContent":["\nexport const commarize = (num) => {\n  // Alter numbers larger than 1k\n  if (num >= 1e3) {\n    var units = [\"k\", \"M\", \"Billion\", \"Trillion\"];\n    \n    // Divide to get SI Unit engineering style numbers (1e3,1e6,1e9, etc)\n    let unit = Math.floor(((num).toFixed(0).length - 1) / 3) * 3;\n    // Calculate the remainder\n    const formattedNum = ( num / (Number('1e'+unit))).toFixed(1);\n    var unitname = units[Math.floor(unit / 3) - 1]\n    \n    // output number remainder + unitname\n    return formattedNum + ' ' + unitname;\n  }\n  \n  // return formatted original number\n  return num.toFixed(2);\n};\n\nexport const formatNum = (symbol, num) => {\n  let numFormatted = num.toFixed(2).toString().replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\n  if (symbol.measure) {\n    numFormatted += symbol.measure;\n  }\n  // this magic incantation adds commas in the thousands place\n  return numFormatted\n};\n","import React from 'react';\nimport { Line } from '@vx/shape';\nimport { Point } from '@vx/point';\n\nclass Crosshairs extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {datum: props.datum};\n  }\n\n  render() {\n    const {\n      margin,\n      width,\n      height,\n      datum,\n      coords,\n      show,\n      symbols,\n    } = this.props;\n    \n    const showCrosshairs = show && coords;\n\n    return (\n      showCrosshairs &&\n      <React.Fragment>\n          <Line\n            key=\"crosshairs-horizontal\"\n            from={new Point({x: 0, y: coords.y - margin.top})}\n            to={new Point({x: width - margin.left - margin.right,\n                           y: coords.y - margin.top})}\n            strokeDasharray={[4]}\n          />              \n          <Line\n            key=\"crosshairs-vertical\"\n            from={new Point({x: coords.x - margin.left, y: 0})}\n            to={new Point({x: coords.x - margin.left,\n                           y: height - margin.top - margin.bottom})}\n            strokeDasharray={[4]}\n          />\n      </React.Fragment>\n    );\n\n\n  }\n  \n}\n\nexport default Crosshairs;\n","import React from 'react';\nimport { commarize, formatNum } from '../utils/formatters';\n\n/* function commarize(num) {\n *   // Alter numbers larger than 1k\n *   if (num >= 1e3) {\n *     var units = [\"k\", \"M\", \"Billion\", \"Trillion\"];\n *     \n *     // Divide to get SI Unit engineering style numbers (1e3,1e6,1e9, etc)\n *     let unit = Math.floor(((num).toFixed(0).length - 1) / 3) * 3;\n *     // Calculate the remainder\n *     const formattedNum = ( num / (Number('1e'+unit))).toFixed(1);\n *     var unitname = units[Math.floor(unit / 3) - 1]\n *     \n *     // output number remainder + unitname\n *     return formattedNum + ' ' + unitname;\n *   }\n *   \n *   // return formatted original number\n *   return num.toFixed(2);\n * }\n * const formatNum = (symbol, num) => {\n *   let numFormatted = num.toFixed(2).toString().replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\n *   if (symbol.measure) {\n *     numFormatted += symbol.measure;\n *   }\n *   // this magic incantation adds commas in the thousands place\n *   return numFormatted\n * }; */\n\nconst formatDatum = (symbol, datum) => {\n  return (\n    <div key={symbol.name}>\n        <div>\n            <span style={{color: symbol.color}}>●</span> {symbol.name}\n        </div>\n        <div>\n            &emsp;Price (USD): {formatNum(symbol, datum[symbol.name].close)}\n        </div>\n        {datum[symbol.name].cap &&\n        <div>\n            &emsp;Market Cap (USD): {commarize(datum[symbol.name].cap)}\n        </div>\n        }\n    </div>\n  );\n};\n\nclass Tooltip extends React.Component {\n\n  render() {\n    const {\n      datum,\n      symbols,\n    } = this.props;\n    \n    return (\n      datum &&\n      <div>\n          <div>{datum.date.toDateString()}</div>\n          {symbols.map((s) => formatDatum(s, datum))}\n      </div>\n    );\n\n  }\n\n}\n\nexport default Tooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Group } from '@vx/group';\nimport { Grid } from '@vx/grid';\nimport { AxisRight, AxisBottom } from '@vx/axis';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { LinePath } from '@vx/shape';\nimport { extent, max, scan } from 'd3-array';\nimport { localPoint } from '@vx/event';\nimport styled from 'react-emotion';\nimport Crosshairs from './Crosshairs';\nimport Tooltip from './Tooltip';\nimport { Object } from 'core-js';\nimport debounce from 'lodash/debounce';\nimport { withTooltip, TooltipWithBounds } from '@vx/tooltip';\n\nconst Rect = styled('rect')`\n  cursor: crosshair;\n  /* pointer-events: all; */\n  visibility: hidden;\n  :active {\n    cursor: grab;\n  }\n`;\n\n\nclass HotAirChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDragging: false,\n      datum: null,\n      crosshairsCoords: null,\n      showCrosshairs: false,\n    };\n    this.crosshairsLock = false;\n  }\n\n  componentWillMount = () => {\n    this.unlockCrosshairs = debounce(() => this.crosshairsLock = false, 10);\n  };\n  \n  handleMouseOver = (xToDataAccessor, e) => {\n    if (!this.state.isDragging) {\n      // cancel an early unlock\n      this.unlockCrosshairs.cancel();\n      \n      let coords = localPoint(e.target.ownerSVGElement, e);\n\n      const datum = xToDataAccessor(coords.x);\n\n      this.crosshairsLock = true;\n      this.setState((state) => ({\n        isDragging: state.isDragging,\n        datum: datum,\n        crosshairsCoords: coords,\n        showCrosshairs: true,\n      }));\n\n      this.props.showTooltip({\n        tooltipLeft: coords.x,\n        tooltipTop: coords.y,\n        tooltipData: datum,\n      });\n      \n      // unlock crosshairs after a delay\n      this.unlockCrosshairs();\n    }\n  };\n\n  handleMouseOut = (hideTooltip) => {\n    if (!this.crosshairsLock) {\n      \n      this.setState((state) => ({\n        isDragging: state.isDragging,\n        datum: state.datum,\n        showCrosshairs: false,\n      }));\n      hideTooltip();\n    }\n  };\n  \n  handleDragStart = (e) => {\n    e.preventDefault();\n    this.setState({isDragging: true});\n  };\n  \n  handleDrag = (shiftCb, spacing, e) => {\n    if (this.state.isDragging) {\n      e.preventDefault();\n      // we want to go the opposite way of the actual movement\n      const sign = -Math.sign(e.movementX);\n      const extentsShifted = Math.ceil(Math.abs(e.movementX) / Math.floor(spacing));\n      extentsShifted > 0 && shiftCb(sign * extentsShifted);\n    }\n  };\n  \n  handleDragEnd = (e) => {\n    e.preventDefault();\n    if (this.state.isDragging) {\n      this.setState({isDragging: false});\n    }\n  };\n\n\n  render() {\n\n    const {\n      width,\n      height,\n      margin,\n      data,\n      shift,\n      symbols,\n      tooltipData,\n      tooltipTop,\n      tooltipLeft,\n      tooltipOpen,\n      hideTooltip,\n    } = this.props;\n    \n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n\n    const x = d => new Date(d.date);\n    \n    const maxYScale = (d) => Math.max(...symbols.map(s => d[s.name].close));\n    \n    const xScale = scaleTime({\n      range: [0, xMax],\n      domain: extent(data, x)\n    });\n    const yScale = scaleLinear({\n      range: [yMax, 0],\n      domain: [0, max(data, maxYScale)],\n    });\n\n    // maps a value on the X axis to the corresponding datum\n    const xToDataAccessor = (xVal) => {\n      const date = xScale.invert(xVal - margin.left);\n      date.setUTCHours(0);\n      date.setUTCMinutes(0);\n      date.setUTCSeconds(0);\n      const index = data.findIndex((d) => d.date.valueOf() >= date.valueOf());\n      if (index === -1) {\n        console.log(`Could not find matching data point for ${date}`);\n        return null;\n      } else {\n        return data[index];\n      }\n    };\n    \n    const xSpacing = xScale(data[1].date) - xScale(data[0].date);\n    const shiftCb = this.props.shiftCb;\n    const doDrag = this.handleDrag.bind(this, shiftCb, xSpacing);\n    const highlightedLine = this.props.highlightedLine;\n\n    const linePath = (symbol, data) => {\n      const y = (d) => d[symbol.name].close;\n      const strokeWidth = highlightedLine === symbol.name ? 6 : 2\n      return (\n        <LinePath\n          key={symbol.name}\n          data={data}\n          xScale={xScale}\n          yScale={yScale}\n          x={x}\n          y={y}\n          stroke={symbol.color}\n          strokeWidth={strokeWidth}\n          onMouseOver={() => e => this.handleMouseOver(xToDataAccessor, e)}\n          onMouseOut={() => () => this.handleMouseOut(hideTooltip)}\n          style={{pointerEvents: 'all'}}\n        />\n      );\n    };\n\n    return (\n      <React.Fragment>\n          <svg width={width} height={height}>\n              <Group top={margin.top} left={margin.left} style={{cursor: 'crosshair'}}>\n                  <Rect\n                    width={width}\n                    height={height}\n                    onMouseMove={(e) => doDrag(e)}\n                    onMouseUp={this.handleDragEnd}\n                    onMouseDown={this.handleDragStart}\n                    onWheel={this.props.onScroll}>\n                  </Rect>\n                  {symbols.map(s => linePath(s, data))}\n                  {<Crosshairs\n                     margin={margin}\n                     width={width}\n                     height={height}\n                     show={this.state.showCrosshairs}\n                     coords={this.state.crosshairsCoords}\n                     datum={this.state.datum}\n                  />}\n                  <Grid\n                    xScale={xScale}\n                    yScale={yScale}\n                    width={width - margin.left - margin.right}\n                    height={height - margin.top - margin.bottom}\n                  />\n                  <AxisBottom\n                    scale={xScale}\n                    top={yMax}\n                    stroke='#1b1a1e'\n                    tickTextFill=\"#1b1a1e\"\n                  />\n                  <AxisRight\n                    scale={yScale}\n                    top={0}\n                    left={width - margin.left - margin.right}\n                    label='Close Price ($)'\n                    labelOffset={50}\n                    labelProps={{fontSize: 15}}\n                    stroke=\"#1b1a1e\"\n                    tickTextFill=\"#1b1a1e\"\n                  />\n              </Group>\n          </svg>\n          {tooltipOpen && \n          <TooltipWithBounds\n            key={Math.random()}\n            top={tooltipTop}\n            left={tooltipLeft}\n          >\n              <Tooltip symbols={symbols} datum={tooltipData} />\n          </TooltipWithBounds>\n          }\n      </React.Fragment>\n    );\n  }\n}\n\nHotAirChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  symbols: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  shiftCb: PropTypes.func,\n  showMarketCap: PropTypes.bool,\n  margin: PropTypes.object,\n  highlightedLine: PropTypes.string,\n  onScroll: PropTypes.func,\n};\n\nconst HotAirChartWithTooltip = withTooltip(HotAirChart);\n\nexport default HotAirChartWithTooltip;\n"],"sourceRoot":""}