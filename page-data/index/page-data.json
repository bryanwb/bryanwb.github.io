{"componentChunkName":"component---src-pages-index-jsx","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<p>After 10 years working as a professional software engineer, I enrolled in\nGeorgia Tech's <a href=\"www.omscs.gatech.edu/\">Online Master's in Computer Science</a>. I was motivated by the large\ngaps in my knowledge that I was not able to fill by self study despite numerous\nattempts. While I earned an undergrad degree in Computer Science, I have never\nwritten a compiler, dug in depth into operating systems concepts, gone beyond\nintro to algorithms, or delved into AI/ML/RL at all. A CS grad from MIT might very\nwell graduate with all those skills but I went to a middling university and got\nwell, middling grades. After 10 years in the field I am a Hell of a lot more\nmotivated and also much more genuinely interested in the subject than I was at\nage 20 when I just enrolled into intro to CS because I couldn't get into an\nEconometrics class.</p>\n<p>I am four classes into OMSCS program and I have to tell you that on the whole it\nis fucking amazing. The classes are hard, my classmates are super engaged and\nhelpful, and I am learning a lot. Did I mention that the program is cheap? Only\n$180/credit hour which adds up to only $8,000 USD for the entire degree. That\nlow price means that the OMSCS can attract very smart people from all over the\nworld who can't take out student loans or don't have the means to drop $21K on a\ngraduate degree. That low price also means that Georgia Tech is serious about\nattracting the best students not just those that can pay.</p>\n<p>I am surprised that the OMSCS program 1) doesn't get more attention and 2) isn't\ncopied by more institutions. Let me clarify by what I mean by \"not more\npopular.\" On Hacker News and other programming-related outlets there are\nconstantly posts on how to become a software engineer or how become a better\nsoftware engineer and the OMSCS program only comes up in the discussion\noccasionally. Further, most of the software engineers I meet in person aren't\naware of the program's existence. I suspect that the program doesn't get more\nattention because it is really damn hard and most aspirants to a software\nengineering career are looking for an easier way into the field than a 3 year\nlong 20 hour a week slog. If you're lucky like me and can do the program\nfull-time, you're looking at 40+ hrs/week for 2 years. Fuck that, just spend\n$15k on a six month programming bootcamp and I am sure you will get that FAANG\njob of your dreams!  Sorry friends, it doesn't work that way.</p>\n<p>It is worth mentioning that there are broadly two groups of students I have met\nin the program. The first group are those that are looking to generally upgrade\ntheir skills. These people often but not always choose the Computing Systems\nspecialization. This group doesn't have to get this degree to make the next\ncareer step. The second group are those that are here for AI/ML. These people\nare very smart, dedicated, and generally need this degree to get a job in the\nAI/ML field. Most undergrad programs don't offer AI/ML so this often a student's\nfirst academic exposure to the topic.</p>\n<p>I will break down my experience so far into the proverbial good, bad, and ugly. </p>\n<h2>The Good</h2>\n<ul>\n<li>My classmates are dedicated, smart, and genuinely interested in the topic. In\none course, I learned a signicant amount about the topic from a classmate who\nis a hardware engineer with direct experience in areas related to the course\nwe were taking together.</li>\n<li>Many classes are taught by dedicated professors and TAs who pay close\nattention to your experience and provide useful and quick feedback.</li>\n<li>Some courses have amazing lectures and engaging projects.</li>\n<li>More courses are steadily being added. Starting next term we will be able to\ntake data science courses such as Bayesian Statistics and Time Series Analysis\nas electives. A course in Applied Cryptography should become available some\ntime in 2020.</li>\n<li>The class discussions we have on Slack are awesome. Further, the community is\nvery supportive. Some of my classes have alumni channels that are very active\nand keep people connected.</li>\n</ul>\n<h2>The Bad</h2>\n<ul>\n<li>The content of some courses is out of date and in need of a reboot.</li>\n<li>Some courses limp along on a skeleton crew of TAs and the professor responsible\nthe course is only minimally involved.</li>\n<li>Dealing w/ the Georgia Tech bureaucracy can be time-consuming. I typically\nonly have to deal with the bureaucracy during registration thankfully.</li>\n<li>The application process was time-consuming BUT I they did let me in and they\ndidn't require me to take the GRE.</li>\n<li>No distributed system course is offered nor is there a plan to offer one. This\nis a big deal for me personally as it is my professional area of interest.</li>\n<li>This program takes a lot of time and will require you to put off having any personal life for ~3 years if you do it while working.</li>\n<li>The process to register for classes is time-consuming, confusing, and annoying.</li>\n</ul>\n<h2>Ugly</h2>\n<ul>\n<li>There are some courses of low quality and poor execution. Rather than call\nthem out, I direct you to look at the course reviews at\n<a href=\"https://omscentral.com/courses\">omscentral.com</a>.</li>\n<li>I doubt that prospective employers will be overly impressed by this\ndegree. They seem to only care about LEETCODE algorithm questions. To pass\nthose interviews you might be better off spending a year on codewars. If you\naren't interested to acquire the knowledge that this program offers, you are\nwasting your time and money.</li>\n<li>It is hard as fuck. Doing this degree while working is a huge personal\nsacrifice. It means putting off relationships for a few years or putting off\nhaving a family. Conversely, if these classes are not time-consuming, you didn't need this\ndegree in the first place.</li>\n</ul>\n<h2>Courses I have taken:</h2>\n<ul>\n<li>High Performance Computer Architecture (HPCA) - This class started where the\nComputer Architecture class I took in undergrad left off. Professor wasn't\nespecially active but his lectures were awesome and the exams were challenging\nin the best possible way. I got an intuitive sense of how Cache Coherence, CPU\npipelining, Tomasulo's Algorithm, etc. work. Our tireless TA, Nolan, did a\ngreat job.</li>\n<li>Graduate Introduction to Operating Systems (GIOS) - Super-involved professor, amazing TAs, best run\ncourse I have taken. I dug into GLibc and kernel source code and up to my neck into how KVM works.\nFor the first time in my life, I started feeling comfortable working in C code.</li>\n<li>Machine Language for Trading (ML4T) - A class w/ great lectures and great\nTAs. The originating professor has moved on some years ago to Morgan Stanley\nand likely a much higher salary. I learned equal parts about finance and the\nbasics of data science. It was a gentle and enjoyable introduction to Machine\nLearning.</li>\n<li>Advanced Operating Systems (AOS) - This class is amazing and hard as fuck. I\nspend 20-30 hours a week on it. I am still in the middle of it. GIOS helped me understand Linux but AOS has taken me way past it to get a grip on microkernels, exokernel, lightweight RPC, and more. Just the other day Google put out a paper on its <a href=\"https://ai.google/research/pubs/pub48630/\">Snap framework</a> and its citations read like AOS's reading list. Just half of AOS prepared me well for understanding Snap and the challenges it is trying to address. The exams in this class are ridiculously difficult.</li>\n</ul>\n<p>Next term I plan on taking Compilers and a data science course.</p>\n<p>As I noted in the introduction, I am surprised by how little competition the\nOMSCS has attracted. Here are some notes on the programs that I considered\nbefore settling on the OMSCS. I do find it unfortunate that while some other\nprestigious institutions offer online MS in CS, they generally do not compare in\nterms of breadth nor cost.</p>\n<p>University of Illinois started an online MS in CS in 2019. U of I charges shocking $670/credit hour thus a <a href=\"https://cs.illinois.edu/academics/graduate/professional-mcs-program/online-master-computer-science#TuitionFees\">whopping total of $21,000</a> for their M.S degree. in C.S. when they do not even offer critical courses such as AI, ML, compilers, Graduate Algorithms, etc. That $21k price tag tells me they are treating the program as a cash cow, not as a real opportunity to reach out to a large swath of students.</p>\n<p>I have heard good things about <a href=\"https://www.cs.utexas.edu/graduate-program/masters-program/online-option#academics\">U Texas MS in C.S.</a>, specifically that they are serious about AI education. Unlike Georgia Tech, Texas offers a Deep Learning course. Further, Texas only charges $333 per credit hour. That's almost double what Georgia Tech charges ($180/credit hour) but still reasonable. Sadly, Texas only currently offers four courses per term. Texas just started this program in 2019 so it will take some time to mature. Here is to hoping they provide Georgia Tech with some much needed competition.</p>\n<p><a href=\"https://asuonline.asu.edu/online-degree-programs/graduate/computer-science-mcs/\">Arizona State</a> offers an impressive set of courses but I have no information on their quality. At $500/credit hour it is a good bit pricier than Georgia Tech or Texas but not as exorbitant as University of Illinois. My personal suspicion is that any university that charges significantly more than Georgia Tech is seeking students who just want the credential at minimal effort. That said, your diploma from Arizona State or University of Illinois will not specify that you earned your M.S. in Computer Science remotely. Like Texas and Illinois, Arizona State's Master's in C.S. started very recently so it has some growing to do.</p>\n<h2>Conclusion</h2>\n<p>I have really enjoyed the OMSCS thus far and if you are willing to put in the work, you will too.</p>","id":"6cb56d24-6008-540a-8f62-58b110fd491c","excerpt":"After 10 years working as a professional software engineer, I enrolled in\nGeorgia Tech's Online Master's in Computer Science. I was…","frontmatter":{"path":"/blog/y-u-no-omscs","date":"29 October, 2019","title":"Why Isn't Georgia Tech's Online MS in Computer Science More Popular?","tags":"blog"}}},{"node":{"html":"<p>Some months ago I decided to reorient my development career from the DevOps space to web\ndevelopment with JavaScript. I at first tried to apply my editor of choice\n(<a href=\"https://www.gnu.org/software/emacs/\">emacs</a>)but was continually frustrated by\nthe mediocre support for working with JavaScript, particularly compared to\nPython. After wasting at least a day trying to get my Emacs config to support basic completion and syntax checking in JavaScript I came across the blog post <a href=\"https://swizec.com/blog/vscode-better-editor-emacs/swizec/7921\">10 Years\nof love for Emacs Undone by one week of\nVSCode</a>. The\ntitle really struck me as I have spent exactly 10 years with Emacs myself. I decided\nto top swimming upstream and jump wholeheartedly into VS Code. It has been a mixed experience.</p>\n<p>I was instantly struck how amazing VS Code's support is for the JavaScript\nlanguage, libraries, and the web environment. Every tutorial on react, Vue.js, Electron, you name it, recommends using VS Code. My VS Code experience became even better when I\nlearned to drop <code>//@ts-check</code> in every file.  VS Code's language support is so\nawesome that I highly doubt any other editor will ever seriously compete with it\nin that regard. At the same time, I hit a pretty significant pain point\ninstantly. I use emacs keybindings everywhere, in the shell, browser, you name\nit. On OS X, <a href=\"https://pqrs.org/osx/karabiner/\">Karabiner</a> mapped those bindings\nfor me and now on linux laptop with GNOME it is a top-level feature. In VS Code\nI found that I was constantly closing the editor accidentally or deleting a\ntext in a buffer with the most common commands that I use thousands of times a\nday. Here are just a few. I probably have >100 in muscle memory.</p>\n<ul>\n<li>M-f forward word</li>\n<li>M-b backward word</li>\n<li>C-w cut text</li>\n<li>M-w copy text</li>\n<li>C-SPACE start a selection</li>\n<li>C-a beginning line</li>\n<li>C-e end of line</li>\n<li>M-a back paragraph</li>\n<li>M-e forward paragraph</li>\n<li>C-s search forward</li>\n<li>C-j Change buffer</li>\n<li>and many more</li>\n</ul>\n<p>I found an <a href=\"https://github.com/SebastianZaha/vscode-emacs-friendly\">emacs plugin for VS Code</a> but it only muddled the situation memory as it only supported some\ncommands and then with annoying bugs that made the plugin more trouble than it was worth.</p>\n<p>I dropped the emacs plugin and tried to do things the VS Code way. It only kind of worked for me but I soon encountered more hurdles. As a developer, there is a whole set of things we do that are project-related tasks such as:</p>\n<ul>\n<li>Working with git</li>\n<li>Renaming files, moving them around</li>\n<li>Maintaining a personal TODO list and logging errors, troubleshooting information in a personal log</li>\n<li>Executing shell commands</li>\n<li>Writing documentation in markdown, ReST, asciidoc</li>\n</ul>\n<p>While VS Code likely has some support for these, I found the VS Code plugins in these areas lacking\nwhen I tried them. For example, I found jumping between projects with <a href=\"https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager\">Project Manager</a> very poor in comparison to Emacs' incredible <a href=\"https://github.com/bbatsov/projectile\">Projectile</a>. It is important to note that the Project Manager addon may have improved significantly since I last used it a few months ago. The existing git addons also pale in comparison to Emacs' fantastic <a href=\"https://magit.vc/\">git interface</a>. <a href=\"https://github.com/abo-abo/swiper/blob/master/counsel.el#L1222\">counsel-git-grep</a> across a huge codebase truly is a superpower.</p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/AgRsYOJi6ao\" frameborder=\"0\" allowfullscreen></iframe>\n<p>I am one of those crazy people that runs a terminal inside of emacs. I even have a keybinding (M-j) that\nI use to toggle between character and line mode in the terminal. VS Code's terminal is OK but nothing to write home about.</p>\n<p>I use Emacs <a href=\"https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired.html\">dired</a> mode for manipulating files and directories. It works ridiculously well.</p>\n<p>More than magit, projectile, dired, I missed emacs' <a href=\"https://oremacs.com/swiper/\">ivy</a> completion framework more than anything else. You really have to see it to believe it.</p>\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/VvnJQpTFVDc\" frameborder=\"0\" allowfullscreen></iframe>\n<p>So while I could use VS Code for writing JavaScript, I still found myself spending 30-50% of my work time in Emacs. The mismatch between keybindings in VSCode and rest of my tools just kept tying my fingers in knots.</p>\n<p>So far I have talked a whole lot about the Emacs features that I miss in VS Code. But surely, you ask, won't VS Code implement all of those features even better than Emacs given the VS Code teams extensive developer resources? Maybe, but I would be surprised if they did. I doubt the VS Code team intends to give it a kitchen sink of capabilities that we see in Emacs.</p>\n<p>After one month, I decided to reinvestigate using Emacs for JavaScript. I came upon the awesome <a href=\"https://github.com/ananthakumaran/tide\">Tide-mode</a>. It took me about a day but I got it working to my satisfaction. It does not hold a candle to VS Code but it provides me enough features to be productive in JavaScript.</p>\n<p>Some of the features tide-mode provides:</p>\n<ul>\n<li>auto-completion (via company-mode)</li>\n<li>linting</li>\n<li>syntax-checking (together w/ flycheck)</li>\n<li>documentation at point</li>\n<li>basic refactoring</li>\n</ul>\n<p>Here is tide-mode in action</p>\n<p><img src=\"https://i.imgur.com/jEwgPsd.gif\" alt=\"tide in action\"></p>\n<p>A few notes on using tide-mode:</p>\n<ol>\n<li>You have to drop a jsconfig.json (for JavaScript) or tsconfig.json (for TypeScript) into your project in order to use it.</li>\n<li>You have to install typescript into your projects for it to work optimally. As it leverages the <code>tsserver</code> that ships with TypeScript. Note that it does not need to be a project dependency. You can install it thus with <code>npm install typescript</code></li>\n<li>I am using Emacs 26. Not sure how well this works with Emacs 25</li>\n<li>I haven't found a good way to fully support JSX in files with a regular <code>.js</code> extension. So far I have simply renamed any file containing JSX to <code>.jsx</code> in order to get web-mode + tide-mode to work properly.</li>\n</ol>\n<p>I may be mistaken but I believe the <code>tsserver</code> that ships with TypeScript was developed by the same team that makes VS Code. It is not without irony that the Emacs mode I am using to replace of VS Code depends on software developed by the VS Code team.</p>\n<p>VS Code is an excellent IDE and I would recommend any new software developer to use it. But with the excellent tide-mode, I no longer need to.</p>\n<p>You can find my emacs configuration for JavaScript <a href=\"https://github.com/bryanwb/dotfiles/blob/master/emacs.d/init.el#L845-L909\">here</a>.</p>\n<p>P.S. I haven't figured out a great solutions for the following and would love to hear from you the readers.</p>\n<ul>\n<li>Debugging - I still use VS Code but have looked into <a href=\"https://github.com/GoogleChromeLabs/ndb\">ndb</a>. Don't know yet if it is a worthy replacement.</li>\n<li>HTML element, css attribute completion - One of my favorite things about VS Code is that it supports completion and inline documentation for CSS and HTML, technologies that I know pathetically little about.</li>\n<li>Browsing Mozilla, CSS documentation within Emacs - anyone have a good solution for this? iirc helm-dash has something useful here but I haven's seriously investigated it.</li>\n<li>Auto-completion, linting for Flow - I don't use flow so I have been able to skip this so far but I very much would like to browse and contribute to the desktop application for <a href=\"https://ledger.fr\">Ledger</a> and it uses Flow extensively.</li>\n</ul>\n<p>P.P.S. Thanks so much to <a href=\"https://ananthakumaran.in/\">Anantha Kumaran</a> for his work on tide-mode w/out which I would be stuck in VS Code.</p>\n<p>Update: below is the magic incantation that I used in my web-mode configuration to get jsx syntax highlighting in regular <code>.js</code> files</p>\n<pre><code class=\"language-lisp\">    (setq web-mode-content-types-alist\n          '((\"jsx\" . \"\\\\.js[x]?\\\\'\")))\n</code></pre>","id":"11bb0886-79c0-52c2-85f1-9dee15d91acd","excerpt":"Some months ago I decided to reorient my development career from the DevOps space to web\ndevelopment with JavaScript. I at first tried to…","frontmatter":{"path":"/blog/goodbye-vscode","date":"23 August, 2018","title":"Goodbye VSCode, Hello Emacs (Again)","tags":"blog"}}}]}},"pageContext":{}},"staticQueryHashes":["1718290524"]}